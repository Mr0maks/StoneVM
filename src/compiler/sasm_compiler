#!/usr/bin/python3
import struct
import sys

ops = (('halt', ''), ('nop', ''), ('loadi', '0i'), ('dump', '0'), 
       ('mov', '01'), ('shr', '0i'), ('shl', '0i'), ('xor', '012'), 
       ('add', '012'), ('sub', '012'), ('mul', '012'), ('div', '012'), 
       ('inc', '0'), ('dec', '0'), ('and', '012'), ('or', '012'), 
       ('fload', '0f'), ('fdump', '0'), ('fadd', '012'), ('fsub', '012'), 
       ('fmul', '012'), ('fdiv', '012'), ('fsqrt', '01'), ('frsqrt', '01'), 
       ('cmp', '01'), ('call', 'i'), ('ret', ''), ('jump', 'i'), 
       ('loop', 'i'), ('jz', 'i'), ('jnz', 'i'))



f_in = open(sys.argv[1],'r')
f_out =  open('bin.sbc', 'wb')


labels = dict()
for n,line in enumerate(f_in.readlines()):
    if line == '':
        continue
        
    inst = line.strip().split()
    op = 0
    arg = [0,0,0,0]

    if inst[0][0] == ':':
        labels[inst[0][1:]] = n
        print(1, 0, 0, 0, 0)
        data = struct.pack('bbbbi', 1, 0, 0, 0, 0)
        f_out.write(data)
        continue
    
    if inst[0] in ('jump', 'loop', 'jz', 'jnz', 'call'):
        op_info = next(filter(lambda x: x[0] == inst[0], ops))
        print(ops.index(op_info), 0, 0, 0, labels[inst[1]])
        data = struct.pack('bbbbi', ops.index(op_info), 0, 0, 0, labels[inst[1]])
        f_out.write(data)
        continue

    op_info = next(filter(lambda x: x[0] == inst[0], ops))

    op = ops.index(op_info)

    for i in range(len(op_info[1])):
        if op_info[1][i] in '012':
            arg[i] = int(inst[i+1], 0)
        elif op_info[1][i] == 'i':
            arg[3] = int(inst[i+1])
        elif op_info[1][i] == 'f':
            arg[3] = float(inst[i+1])

    print(op, arg[0], arg[1], arg[2], arg[3])

    data = struct.pack('bbbb', op, arg[0], arg[1], arg[2])

    if 'f' not in op_info[1]:
        data += struct.pack('i', arg[3])
    else:
        data += struct.pack('f', arg[3])

    f_out.write(data)

f_in.close()
f_out.close()